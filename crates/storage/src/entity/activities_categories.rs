//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.15

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "activities_categories")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub guid: String,
    pub activity_guid: String,
    pub category_guid: String,
}

#[derive(DeriveIden)]
pub enum ActivitiesCategoriesEnum {
    Table,
    Guid,
    ActivityGuid,
    CategoryGuid,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::activities::Entity",
        from = "Column::ActivityGuid",
        to = "super::activities::Column::Guid",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    Activities,
    #[sea_orm(
        belongs_to = "super::categories::Entity",
        from = "Column::CategoryGuid",
        to = "super::categories::Column::Guid",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    Categories,
}

impl Related<super::activities::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Activities.def()
    }
}

impl Related<super::categories::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Categories.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
