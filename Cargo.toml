[workspace]
members = ["crates/cli", "crates/core"]

[workspace.package]
authors = ["the pace-rs team"]
categories = ["command-line-utilities"]
edition = "2021"
keywords = ["cli"]
license = "AGPL-3.0-or-later"
repository = "https://github.com/pace-rs/pace"

[workspace.dependencies]
pace_cli = { path = "crates/cli", version = "0" }
pace_core = { path = "crates/core", version = "0" }

[package]
name = "pace-rs"
version = "0.6.2"
authors = { workspace = true }
categories = { workspace = true }
edition = { workspace = true }
keywords = { workspace = true }
license = { workspace = true }
repository = { workspace = true }
rust-version = "1.74.1"
description = "pace - Mindful Time Tracking: Simplify Your Focus and Boost Productivity Effortlessly."

include = [
  "LICENSE",
  "README.md",
  "CHANGELOG.md",
  "src/**/*",
  "Cargo.toml",
]

[package.metadata.wix]
upgrade-guid = "4D6D5C4F-3994-423F-9D4C-2F92C580F54B"
path-guid = "441ECBBB-93E2-4DC2-9D74-F4B116EDFABE"
license = false
eula = false

[dependencies]
chrono = { version = "0.4.34", features = ["serde"] }
clap = { version = "4", features = ["env", "wrap_help"] }
clap_complete = "4.5.0"
dialoguer = { version = "0.11.0", features = ["history", "fuzzy-select"] }
directories = "5.0.1"
eyre = "0.6.12"
human-panic = "1.2.3"
pace_cli = { workspace = true }
pace_core = { workspace = true }
serde = "1"
serde_derive = "1"
thiserror = "1.0.57"
toml = { version = "0.8.10", features = ["preserve_order"] }

[dependencies.abscissa_core]
version = "0.7.0"
# optional: use `gimli` to capture backtraces
# see https://github.com/rust-lang/backtrace-rs/issues/189
# features = ["gimli-backtrace"]

[dev-dependencies]
abscissa_core = { version = "0.7.0", features = ["testing"] }
assert_cmd = "2.0.13"
once_cell = "1.19"
predicates = "3.1.0"
tempfile = "3.10.0"

# The profile that 'cargo dist' will build with
[profile.dist]
inherits = "release"
lto = "thin"

# Config for 'cargo dist'
[workspace.metadata.dist]
# The preferred cargo-dist version to use in CI (Cargo.toml SemVer syntax)
cargo-dist-version = "0.10.0"
# CI backends to support
ci = ["github"]
# The installers to generate for each app
installers = ["shell", "powershell", "msi"]
# Target platforms to build apps for (Rust target-triple syntax)
targets = [
  "aarch64-apple-darwin",
  "x86_64-apple-darwin",
  "x86_64-unknown-linux-gnu",
  "x86_64-unknown-linux-musl",
  "x86_64-pc-windows-msvc",
]
# Publish jobs to run in CI
pr-run-mode = "plan"

# see: https://nnethercote.github.io/perf-book/build-configuration.html
[profile.dev]
opt-level = 0
debug = 0 # try for faster builds, usually 'true'
strip = "debuginfo" # try for faster builds
rpath = false
lto = false
debug-assertions = true
codegen-units = 4

# compile dependencies with optimizations in dev mode
# see: https://doc.rust-lang.org/stable/cargo/reference/profiles.html#overrides
[profile.dev.package."*"]
opt-level = 3
debug = true

[profile.release]
opt-level = 3
debug = false # true for profiling
rpath = false
lto = "fat"
debug-assertions = false
codegen-units = 1
strip = true
panic = "abort"

[profile.test]
opt-level = 1
debug = true
rpath = false
lto = false
debug-assertions = true
codegen-units = 4

[profile.bench]
opt-level = 3
debug = true # true for profiling
rpath = false
lto = true
debug-assertions = false
codegen-units = 1

# Allows quick RPM file generation, if "cargo-generate-rpm" is installed:
#  cargo build --release; cargo generate-rpm
# will result in a file like target/generate-rpm/pace-rs-0.6.1-1.x86_64.rpm
[package.metadata.generate-rpm]
assets = [
  { source = "target/release/pace", dest = "/usr/bin/pace", mode = "0755", config = false, doc = false }, # user = "root", group = "root" },
]
